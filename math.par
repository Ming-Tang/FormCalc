/~  Based on JS/CC calculator sample. ~/

// #define var fn = require('./../../functions')

/~
    This is a four-function calculator, where precedences
    are defined via associativity definitions of tokens.

    IMPORTANT: The Warnings coming up when invoking JS/CC
               are coming from the grammar, and are resolved
               in order to the precedences and associativity
               information passed to each token.
~/

[* var result; *]

/~ --- Token definitions --- ~/

/~ Characters to be ignored ~/
!   ' |\t' ;

/~ Short functions (sin x, cos1, tan(2)) ~/
// #put fn.getShortFunctionTokens();

/~ Non-associative tokens ~/
    '\('
    '\)'
    '[0-9]+'                        INT   [* %match = parseInt( %match ); *]
    '[0-9]+\.[0-9]*|[0-9]*\.[0-9]+' FLOAT [* %match = parseFloat( %match ); *]
    '[a-zA-Z]+'                     IDENT [* %match = %match; *]

    '=';

/~ Left-associative tokens, lowest precedence ~/
<  '\+'
   '\-';
        
/~ Left-associative tokens, highest precedence ~/
<  '\*'
   '/';

##

/~ --- Grammar specification --- ~/

p: e              [* %% = (result = %1); *]
|  IDENT '=' e    [* %% = (result = setVariable(%1, %3)); *]
;

e: e '+' e        [* %% = %1 + %3; *]
|  e '-' e        [* %% = %1 - %3; *]
|  e '*' e        [* %% = %1 * %3; *]
|  e '/' e        [* %% = %1 / %3; *]
|  '-' e   &'*'   [* %% = %2 * -1; *]
// #put fn.getShortFunctionEvaluations();
|  e2
;

e2: P   e2  &'*'  [* %% = %1 * %2; *]
|   P             [* %% = %1; *]
;

P: Pa
|  N
|  IDENT [* %% = getVariable(%1); *]
;

Pa: '(' e ')'     [* %% = %2; *]
;

N: INT
|  FLOAT
;



[*

    var error_cnt = 0;
    var error_off = [ ];
    var error_la = [ ];
    
    if ((error_cnt = __##PREFIX##parse(input_string, error_off, error_la)) > 0) {
      var errors = [ ];
      for (var i = 0; i < error_cnt; i ++) {
        errors.push("Parse error near >" + input_string.substr(error_off[i], 30)
                    + "<, expecting \"" + error_la[i].join() + "\"" );
      }
      throw errors;
    }

    return result;

*]
